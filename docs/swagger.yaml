openapi: 3.0.0
info:
  title: Controle de gastos
  description: API para gerenciar gastos pessoais
  version: 1.0.0
servers:
  - url: "http://localhost:8080/api/v1"
    description: Development server
paths:
  /usuarios:
    get:
      summary: Retorna todos os usuários
      parameters:
        - in: query
          name: nome
          schema:
            type: string
          description: Retorna os usuários que contém a string no nome
        - in: query
          name: offset
          schema:
            type: integer
          description: Quantidade de itens que será pulada
        - in: query
          name: limit
          schema:
            type: integer
          description: Quantidade de itens que será retornado
      responses:
        "200":
          description: Lista de usuários
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Usuario"
      tags:
        - usuarios
    post:
      summary: Cadastra um novo usuário
      requestBody:
        description: Usuário a ser cadastrado
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Usuario"

      responses:
        "200":
          description: Retorna o usuário cadastrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
        "422":
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
      tags:
        - usuarios
  "/usuarios/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    get:
      summary: Retorna o usuário do id informado
      responses:
        "200":
          description: Usuário encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
        "404":
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
      tags:
        - usuarios
    put:
      summary: Atualiza o usuário do id informado
      requestBody:
        description: Usuário a ser atualizado
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Usuario"
      responses:
        "200":
          description: Retorna o usuário cadastrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
        "404":
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
        "422":
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
      tags:
        - usuarios
    delete:
      summary: Remove o usuário do id informado
      responses:
        "200":
          description: Retorna o usuário removido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
        "404":
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
      tags:
        - usuarios
  /usuarios/login:
    post:
      summary: Loga no sistema
      requestBody:
        description: Credenciais do usuário
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                senha:
                  type: string
                  writeOnly: true
              example:
                username: fmazzuco4
                senha: "1234"
              required:
                - username
                - senha
      responses:
        "200":
          description: Token de acesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                example:
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c3VhcmlvX2lkIjoiNWRhNDgwNjVlNDM1YzYyNDcwODkwOWU5IiwiaWF0IjoxNTcxMTgzMjI4LCJleHAiOjE1NzExODY4Mjh9.w7w-2OlRMAkveOtdy_mecdPBHleIqGa6tJFABl-dKL0
        "403":
          description: Senha inválida
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
        "404":
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
      tags:
        - usuarios
  /contas:
    get:
      summary: Retorna todas as contas
      parameters:
        - in: query
          name: nome
          schema:
            type: string
          description: Retorna as contas que contém a string no nome
        - in: query
          name: offset
          schema:
            type: integer
          description: Quantidade de itens que será pulada
        - in: query
          name: limit
          schema:
            type: integer
          description: Quantidade de itens que será retornado
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Lista de contas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Conta"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      tags:
        - contas
    post:
      summary: Cadastra uma nova conta
      security:
        - bearerAuth: []
      requestBody:
        description: Conta a ser cadastrada
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Conta"
      responses:
        "200":
          description: Retorna a conta cadastrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Conta"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "422":
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
      tags:
        - contas
  "/contas/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    get:
      summary: Retorna a conta do id informado
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Conta encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Conta"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: Conta não encontrada
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
      tags:
        - contas
    put:
      summary: Atualiza a conta do id informado
      security:
        - bearerAuth: []
      requestBody:
        description: Conta a ser atualizada
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Conta"
      responses:
        "200":
          description: Retorna a conta cadastrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Conta"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: Conta não encontrada
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
        "422":
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
      tags:
        - contas
    delete:
      summary: Remove a conta do id informado
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Retorna a conta removida
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Conta"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: Conta não encontrada
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
      tags:
        - contas
  "/contas/{contaId}/transacoes":
    parameters:
      - in: path
        name: contaId
        required: true
        schema:
          type: string
    get:
      summary: Retorna todos os lançamentos
      parameters:
        - in: query
          name: nome
          schema:
            type: string
          description: Retorna os lançamentos que contém a string no nome
        - in: query
          name: offset
          schema:
            type: integer
          description: Quantidade de itens que será pulada
        - in: query
          name: limit
          schema:
            type: integer
          description: Quantidade de itens que será retornado
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Lista de lançamentos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transacao"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      tags:
        - transacoes
    post:
      summary: Cadastra um novo lançamento
      security:
        - bearerAuth: []
      requestBody:
        description: Transação a ser cadastrada
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transacao"
      responses:
        "200":
          description: Retorna o transacao cadastrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transacao"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "422":
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
      tags:
        - transacoes
  "/contas/{contaId}/transacoes/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: contaId
        required: true
        schema:
          type: string
    get:
      summary: Retorna o lançamento do id informado
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Transação encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transacao"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: Transação não encontrado
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
      tags:
        - transacoes
    put:
      summary: Atualiza o lançamento do id informado
      security:
        - bearerAuth: []
      requestBody:
        description: Transação a ser atualizada
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transacao"
      responses:
        "200":
          description: Retorna o lançamento cadastrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transacao"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: Transação não encontrado
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
        "422":
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
      tags:
        - transacoes
    delete:
      summary: Remove a lançamento do id informado
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Retorna o lançamento removida
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transacao"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: Transação não encontrado
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
      tags:
        - transacoes
  /categorias:
    get:
      summary: Retorna todas as categorias
      parameters:
        - in: query
          name: nome
          schema:
            type: string
          description: Retorna as categorias que contém a string no nome
        - in: query
          name: offset
          schema:
            type: integer
          description: Quantidade de itens que será pulada
        - in: query
          name: limit
          schema:
            type: integer
          description: Quantidade de itens que será retornado
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Lista de categorias
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Categoria"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      tags:
        - categorias
    post:
      summary: Cadastra uma nova categoria
      security:
        - bearerAuth: []
      requestBody:
        description: Categoria a ser cadastrada
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Categoria"
      responses:
        "200":
          description: Retorna a categoria cadastrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Categoria"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "422":
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
      tags:
        - categorias
  "/categorias/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    get:
      summary: Retorna a categoria do id informado
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Categoria encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Categoria"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: Categoria não encontrada
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
      tags:
        - categorias
    put:
      summary: Atualiza a categoria do id informado
      security:
        - bearerAuth: []
      requestBody:
        description: Categoria a ser atualizada
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Categoria"
      responses:
        "200":
          description: Retorna a categoria cadastrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Categoria"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: Categoria não encontrada
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
        "422":
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
      tags:
        - categorias
    delete:
      summary: Remove a categoria do id informado
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Retorna a categoria removida
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Categoria"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: Categoria não encontrada
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
      tags:
        - categorias
  /authenticate:
    post:
      summary: Verifica se um token é válido
      security:
        - bearerAuth: []
      requestBody:
        description: Token a ser verificado
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              example:
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c3VhcmlvX2lkIjoiNWRhNDgwNjVlNDM1YzYyNDcwODkwOWU5IiwiaWF0IjoxNTcxMTgzMjI4LCJleHAiOjE1NzExODY4Mjh9.w7w-2OlRMAkveOtdy_mecdPBHleIqGa6tJFABl-dKL0
      responses:
        "204":
          description: Informa se o token é válido
        "400":
          description: Token não informado
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
        "403":
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: "#components/responses/DefaultError"
      tags:
        - authorization
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Usuario:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        nome:
          type: string
        username:
          type: string
        senha:
          type: string
          writeOnly: true
      example:
        id: 5da268bab917a843a850531a
        nome: Francisco Mazzuco
        usuario: fmazzuco
        senha: "1234"
      required:
        - nome
        - username
        - senha
    Conta:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        nome:
          type: string
        usuario:
          $ref: "#/components/schemas/Usuario"
          readOnly: true
      example:
        id: 5da507f9f02e184328a07db2
        nome: Banco do Brasil
        usuario: 5da268bab917a843a850531a
      required:
        - nome
    Transacao:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        nome:
          type: string
        valor:
          type: number
        tipo:
          type: string,
          enum:
            - Ganho
            - Despesa
        categoriaId:
          $ref: "#/components/schemas/Categoria"
        conta:
          $ref: "#/components/schemas/Conta"
          readOnly: true
        usuario:
          $ref: "#/components/schemas/Usuario"
          readOnly: true
      example:
        id: 5da65a9ed96d201a60861bf9
        nome: Restaurante 123
        valor: 25.00
        tipo: Ganho
        usuario: 5da268bab917a843a850531a
        categoria: 5da507f9f02e184328a07db5
        conta: 5da507f9f02e184328a07db2
      required:
        - nome
    Categoria:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        nome:
          type: string
        usuario:
          $ref: "#/components/schemas/Usuario"
          readOnly: true
      example:
        id: 5da268bab917a843a850531a
        nome: Eletrônicos
        usuario: 5da268bab917a843a850531a
      required:
        - nome
  responses:
    UnauthorizedError:
      description: Unauthorized
    DefaultError:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
              detail:
                type: string
            example:
              title: Não encontrado
              detail: Transação não encontrado
tags:
  - name: usuarios
    description: Usuários
  - name: contas
    description: Contas
  - name: transacoes
    description: Transações
  - name: categorias
    description: Categorias
  - name: authorization
    description: Autorização
